// <auto-generated />
using System;
using DirectoryOfIndividuals.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DirectoryOfIndividuals.Api.Data.Migrations
{
    [DbContext(typeof(IndividualsDirectoryDbContext))]
    partial class IndividualsDirectoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.CitiesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.ConnectedIndividualsEntity", b =>
                {
                    b.Property<int>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectionKind")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonAInd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonBInd")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConnectionId");

                    b.HasIndex("PersonAInd");

                    b.HasIndex("PersonBInd");

                    b.ToTable("ConnectedIndividuals");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.IndividualEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageAdress")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.PhoneNumbersEntity", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberType")
                        .HasColumnType("INTEGER");

                    b.HasKey("PhoneNumberId");

                    b.HasIndex("NumberOwnerId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.ConnectedIndividualsEntity", b =>
                {
                    b.HasOne("DirectoryOfIndividuals.Api.Entities.IndividualEntity", "PersonA")
                        .WithMany("ConnectionPersonsA")
                        .HasForeignKey("PersonAInd")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DirectoryOfIndividuals.Api.Entities.IndividualEntity", "PersonB")
                        .WithMany("ConnectionPersonsB")
                        .HasForeignKey("PersonBInd")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PersonA");

                    b.Navigation("PersonB");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.PhoneNumbersEntity", b =>
                {
                    b.HasOne("DirectoryOfIndividuals.Api.Entities.IndividualEntity", "NumberOwner")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("NumberOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NumberOwner");
                });

            modelBuilder.Entity("DirectoryOfIndividuals.Api.Entities.IndividualEntity", b =>
                {
                    b.Navigation("ConnectionPersonsA");

                    b.Navigation("ConnectionPersonsB");

                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
